using MeUi.Api.Endpoints;
using MeUi.Application.Features.MalwareFamilies.Queries.GetMalwareFamiliesPaginated;
using MeUi.Application.Interfaces;
using MeUi.Application.Models;

namespace MeUi.Api.Endpoints.MalwareFamilies;

public class GetMalwareFamiliesEndpoint : BaseEndpoint<GetMalwareFamiliesPaginatedQuery, PaginatedDto<MalwareFamilyDto>>, IPermissionProvider
{
    public static string Permission => "READ:MALWARE_FAMILY";

    public override void ConfigureEndpoint()
    {
        Get("api/v1/malware-families");
        Description(x => x.WithTags("Malware Family Management")
            .WithSummary("Get paginated list of malware families")
            .WithDescription("Retrieves a paginated list of malware families with optional search and sorting. Global reference data accessible to all tenants. Requires READ:MALWARE_FAMILY permission."));
    }

    public override async Task HandleAsync(GetMalwareFamiliesPaginatedQuery req, CancellationToken ct)
    {
        PaginatedDto<MalwareFamilyDto> malwareFamilies = await Mediator.Send(req, ct);
        await SendSuccessAsync(malwareFamilies, $"Retrieved {malwareFamilies.Items.Count()} malware families successfully", ct);
    }
}
