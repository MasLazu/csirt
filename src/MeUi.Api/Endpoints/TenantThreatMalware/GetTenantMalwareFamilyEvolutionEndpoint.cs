using MeUi.Api.Endpoints;
using MeUi.Application.Features.TenantThreatMalware.Queries.GetMalwareFamilyEvolution;
using MeUi.Application.Models.ThreatMalware;
using MeUi.Application.Interfaces;
using System.Collections.Generic;

namespace MeUi.Api.Endpoints.TenantThreatMalware;

public class GetTenantMalwareFamilyEvolutionEndpoint : BaseTenantAuthorizedEndpoint<GetTenantMalwareFamilyEvolutionQuery, List<MalwareFamilyTimePointDto>, GetTenantMalwareFamilyEvolutionEndpoint>, ITenantPermissionProvider, IPermissionProvider
{
    public static string Permission => "READ:THREAT_MALWARE";
    public static string TenantPermission => "READ:TENANT_THREAT_MALWARE";

    public override void ConfigureEndpoint()
    {
        Get("api/v1/tenant/{tenantId}/threat-malware/family-evolution");
        Description(x => x.WithTags("Tenant Threat Malware")
            .WithSummary("Get tenant malware family evolution timeline")
            .WithDescription("Retrieves malware family evolution timeline data for tenant-specific malware intelligence. Requires READ:TENANT_THREAT_MALWARE permission."));
    }

    protected override async Task HandleAuthorizedAsync(GetTenantMalwareFamilyEvolutionQuery req, Guid userId, CancellationToken ct)
    {
        var evolution = await Mediator.Send(req, ct);
        await SendSuccessAsync(evolution, $"Retrieved {evolution.Count} malware family evolution data points for tenant {req.TenantId}", ct);
    }
}