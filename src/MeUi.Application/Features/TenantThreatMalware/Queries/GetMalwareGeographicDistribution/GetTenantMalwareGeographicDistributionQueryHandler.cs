using MediatR;
using MeUi.Application.Interfaces;
using MeUi.Application.Models.ThreatMalware;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace MeUi.Application.Features.TenantThreatMalware.Queries.GetMalwareGeographicDistribution;

public class GetTenantMalwareGeographicDistributionQueryHandler : IRequestHandler<GetTenantMalwareGeographicDistributionQuery, List<MalwareGeographicDto>>
{
    private readonly ITenantThreatMalwareRepository _repository;

    public GetTenantMalwareGeographicDistributionQueryHandler(ITenantThreatMalwareRepository repository)
    {
        _repository = repository;
    }

    public async Task<List<MalwareGeographicDto>> Handle(GetTenantMalwareGeographicDistributionQuery request, CancellationToken cancellationToken)
    {
        return await _repository.GetMalwareGeographicDistributionAsync(
            request.TenantId,
            request.Start,
            request.End,
            request.Limit,
            cancellationToken);
    }
}